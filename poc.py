## This is just PoC Code without much error handling and input parameters!

import requests
import gzip
import datetime
import time
import hashlib
import json

##Specify params here!!##

#Your login; must be created beforehand
username = "mustermann22@gmx.de"
password = "Passwirt123"

#I guess this is generated by the app on install (?). It seems to be static. You would have to look it up for using the script
clientsecret = ""

duration = 32 #in minutes
distance = 6000 #in metres

#############################################

def generate_headers(clientsecret, token):
    #if token equals 0 no Authorization header will be appended
    # I left the Device name of my test Android phone inside the headers section. I am pretty sure you could also omit that completely...

    #generate X-Date
    x_date = str(datetime.datetime.now())
    x_date=x_date.split('.')[0]
    x_date=x_date.replace('-','.')
    print("+++ Creating header w/ time "+ x_date+" +++")

    #generate x-auth-token
    x_auth_token = '--com.runtastic.android--' + clientsecret + '--' + x_date + '--'
    x_auth_token = hashlib.sha1(x_auth_token.encode()).hexdigest()

    if (token == 0):
        headers = {'Content-Encoding': 'gzip', 'X-Date': x_date,'X-Device-Name': 'Redmi Note 5 Pro', 'X-Device-Vendor': 'Xiaomi', 'X-App-Key': 'com.runtastic.android', 'X-Device-Token': '5c9d5682-5395-4a82-afbf-d6c9a63f3e4a', 'X-Locale': 'en-US',  'X-Auth-Token': x_auth_token,'X-Device-Firmware': 'Android 8.1.0', 'Content-Type': 'application/json; charset=utf-8', 'Host': 'appws.runtastic.com', 'User-Agent': 'okhttp/3.14.7','X-NewRelic-ID': 'Vw4AU1VACwMAXVJSBwQ='}
        return headers
    
    headers = {'Authorization': 'Bearer '+token, 'Content-Encoding': 'gzip', 'X-Date': x_date,'X-Device-Name': 'Redmi Note 5 Pro', 'X-Device-Vendor': 'Xiaomi', 'X-App-Key': 'com.runtastic.android', 'X-Device-Token': '5c9d5682-5395-4a82-afbf-d6c9a63f3e4a', 'X-Locale': 'en-US',  'X-Auth-Token': x_auth_token,'X-Device-Firmware': 'Android 8.1.0','X-App-Version': '11.0', 'Content-Type': 'application/json; charset=utf-8', 'Host': 'appws.runtastic.com', 'Cookie': '', 'User-Agent': 'okhttp/3.14.7','X-NewRelic-ID': 'Vw4AU1VACwMAXVJSBwQ='}
    return headers

def login(clientsecret, username, password):
    payload = '{"clientId":"L50134d1e57c55a61b4f5beaf93f1f1952138d0be27d244a9ffcdb5ddf740e80","clientSecret":"'+clientsecret+'","grantType":"password","me":{"countryCode":"DE","email":"'+username+'","locale":"en","serviceRegion":"default","timeZone":"Europe/Berlin"},"password":"'+password+'","username":"'+username+'"}'
    #https://stackoverflow.com/questions/8506897/how-do-i-gzip-compress-a-string-in-python
    gzip_payload= gzip.compress(bytes(payload,'utf-8'))
    login_url = 'https://appws.runtastic.com/webapps/services/auth/v2/login/runtastic'
    headers = generate_headers(clientsecret,0)
    print("+++ Sending login request to "+ login_url+" +++")
    r= requests.post(login_url, data=gzip_payload, headers=headers)
    if(r.status_code == 200):
        print("+++ Success +++")
        response = r.json()
        return response["accessToken"]
    else:
        print("+++ Error at login! Status code: "+ r.status_code+" +++")
        return -1

def create_run(clientsecret, token, duration, distance):
#duration in minutes; distance in metres
#endTime is always time the script runs


    timestamp = int(time.time()) *1000 #needs to be in ms
    endTime = (timestamp -150000) #a little offset just to be sure
    duration = duration * 60 * 1000
    startTime = endTime - duration

    headers = generate_headers(clientsecret, token)

    payload = '{"perPage":50,"syncedUntil":1588429684000,"uploadSessions":[{"additionalInfoData":{"cadenceAvg":0,"cadenceMax":0,"feelingId":-1,"notes":"","pulseAvg":0,"pulseMax":0,"surfaceId":-1,"weatherId":-1},"calories":200,"clientId":"6","distance":'+str(distance)+',"duration":'+str(duration)+',"elevationGain":0,"elevationLoss":0,"endTime":'+str(endTime)+',"extendedData":{"dehydrationVolume":37},"gpsElevationGain":0,"gpsElevationLoss":0,"heartRateData":{"avg":0,"max":0},"manual":true,"oldSessionId":0,"pause":0,"records":{"achievements":{"fastest10k":"none","fastest3Mi":"none","fastest5k":"none","fastestHalfMarathon":"none","fastestKm":"none","fastestMarathon":"none","fastestMi":"none"},"positions":{"fastest10k":"none","fastest3Mi":"none","fastest5k":"none","fastestHalfMarathon":"none","fastestKm":"none","fastestMarathon":"none","fastestMi":"none"}},"speedData":{"avg":10.001,"max":11.0},"sportTypeId":1,"startTime":'+str(startTime)+'}]}'
    gzip_payload = gzip.compress(bytes(payload,'utf-8'))
    run_url = 'https://appws.runtastic.com/webapps/services/runsessions/v3/sync'
    print("+++ Sending run data to "+ run_url+" +++")
    r = requests.post(run_url, data=gzip_payload, headers=headers)
    if(r.status_code == 200):
        print("+++ Success +++")
        print("+++ You just cheated yourself out of running "+str(distance)+"m in "+str(duration/1000/60)+"minutes! +++")

        response = r.json()
        return 0
    else:
        print("+++ Error at posting run! Status code: "+ r.status_code+" +++")
        return -1
    return r.status_code

accessToken = login(clientsecret,username,password)
if(accessToken != -1):
    time.sleep(5)
    create_run(clientsecret, accessToken, duration, distance)
else:
    print("+++ Cancelling +++")

